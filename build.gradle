apply plugin: 'java-library'
apply plugin: 'maven-publish'
apply plugin: 'signing'

sourceCompatibility = '1.8'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {

    //Apache SIS Core
    ext.sisVersion = "0.8"
    api "org.apache.sis.core:sis-referencing:$sisVersion"

    //Apache SIS EPSG database - allows full range of EPSG codes but download and licensing implications.
    //Use of EPSG data is incomptabile for bundling with Apache licence, see: http://sis.apache.org/epsg.html
    testImplementation "org.apache.sis.non-free:sis-embedded-data:$sisVersion"

    //JTS Core
    ext.jtsVersion = "1.16.1"
    api "org.locationtech.jts:jts-core:$jtsVersion"

    //JDON XML
    ext.jdomVersion = "2.0.6"
    implementation "org.jdom:jdom2:$jdomVersion"

    //Apache Jena
    ext.jenaVersion = "3.10.0"
    api "org.apache.jena:jena-arq:$jenaVersion"

    //Apache Commons Collections
    ext.commonsCollectionsVersion = "4.1"
    implementation "org.apache.commons:commons-collections4:$commonsCollectionsVersion"

    //Logging Framework
    ext.slf4jVersion = "1.7.25"
    implementation "org.slf4j:slf4j-api:$slf4jVersion"

    ext.logbackVersion = "1.2.3"
    testImplementation "ch.qos.logback:logback-classic:$logbackVersion"

    //JUnit Testing
    ext.junitVersion = "4.12"
    testImplementation "junit:junit:$junitVersion"

    //Expiring Map
    ext.expiringMapVersion = "1.0.2"
    implementation "io.github.galbiston:expiring-map:$expiringMapVersion"

    //JAXB-API Resolves issue relating to JDK11 and Apache Jena dependency.
    ext.jaxbapiVersion = "2.3.1"
    implementation "javax.xml.bind:jaxb-api:$jaxbapiVersion"
}

group = 'io.github.galbiston'
version = '1.0.6'

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            pom {
                artifactId = 'geosparql-jena'
                from components.java
                artifact sourcesJar
                artifact javadocJar
                pom {
                    name = 'GeoSPARQL Jena'
                    description = 'API implemenation of GeoSPARQL 1.0 standard using Apache Jena.'
                    url = 'https://github.com/galbiston/geosparql-jena'
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            name = 'Greg Albiston'
                            email = 'galbiston@mail.com'
                        }
                    }
                    scm {
                        connection = 'scm:git:git://github.com/galbiston/geosparql-jena.git'
                        developerConnection = 'scm:git:ssh://git@github.com:galbiston/geosparql-jena.git'
                        url = 'https://github.com/galbiston/geosparql-jena.git'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            credentials {
                username sonatypeUsername
                password sonatypePassword
            }
        }
    }
}

build.finalizedBy(publishToMavenLocal)

signing {
    sign publishing.publications.mavenJava
}


javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html4', true)
    }
}

if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}
